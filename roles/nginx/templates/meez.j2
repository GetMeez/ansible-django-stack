upstream {{ application_name }}_wsgi_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server unix:{{ virtualenv_path }}/run/gunicorn.sock fail_timeout=0;
}

#
# Redirect all non-encrypted to encrypted
#
server {
    server_name          {{ nginx_server_name }};
    listen               80;
    listen               [::]:80;

    return 301 https://$server_name$request_uri;
}
#
# Redirect all www to non-www
#
server {
    server_name         {{ nginx_server_name }};
    listen              443 ssl http2;
    listen              [::]:443 ssl http2;
    {% if nginx_use_letsencrypt %}
    ssl_certificate     {{ letsencrypt_dir }}/{{ letsencrypt_cert_filename }};
    ssl_certificate_key {{ letsencrypt_dir }}/{{ letsencrypt_privkey_filename }};
    {% else %}
    ssl_certificate     {{ nginx_ssl_dest_dir }}/{{ application_name }}.crt;
    ssl_certificate_key {{ nginx_ssl_dest_dir }}/{{ application_name }}.key;
    {% endif %}
    ssl_protocols       TLSv1.1 TLSv1.2;
    ssl_ciphers         'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;
    {% if nginx_strong_dh_group %}
    ssl_dhparam          /etc/ssl/certs/dhparams.pem;
    {% endif %}

    # Various nginx optimizations via 
    # https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration
    # worker_processes 1;
    # worker_connections 1024;
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10; 
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 4G;
    large_client_header_buffers 2 1k;
    gzip             on;
    gzip_comp_level  2;
    gzip_min_length  1000;
    gzip_proxied     expired no-cache no-store private auth;
    gzip_types       
      application/atom+xml
      application/javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rss+xml
      application/vnd.geo+json
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/bmp
      image/svg+xml
      image/x-icon
      text/cache-manifest
      text/css
      text/plain
      text/vcard
      text/vnd.rim.location.xloc
      text/vtt
      text/x-component
      text/x-cross-domain-policy;

    access_log {{ nginx_access_log_file }};
    error_log {{ nginx_error_log_file }};

    location /static/ {
        alias   {{ nginx_static_dir }};
        expires 1y;
        add_header Cache-Control "public";
    }

    location /media/ {
        alias   {{ nginx_media_dir }};
        expires 1y;
        add_header Cache-Control "public";
    }
    
    location /web/ {
        alias   {{ nginx_web_dir }};
        expires 1y;
        add_header Cache-Control "public";
    }
    
    location ~* \.(?:json|html?) {
        alias   {{ nginx_web_dir }};
        expires -1;
    }
    
    location /fonts/ {
        alias   {{ nginx_web_dir }}fonts/;
        expires 1y;
        add_header Cache-Control "public";
    }
    
    # alias favicon.* to static
    location ~ ^/favicon.(\w*)$ {
        alias {{ nginx_web_dir }}favicon\.$1;
    } 

    location / {
        if (-f {{ virtualenv_path }}/maintenance_on.html) {
            return 503;
        }

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        if (!-f $request_filename) {
            proxy_pass http://{{ application_name }}_wsgi_server;
            break;
        }
    }

    # Error pages
    error_page 500 502 504 /500.html;
    location = /500.html {
        root {{ project_path }}/{{ application_name }}/templates/;
    }

    error_page 503 /maintenance_on.html;
    location = /maintenance_on.html {
        root {{ virtualenv_path }}/;
    }
}
